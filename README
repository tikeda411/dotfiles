My MacVim dotfile


-------------------------------------------------- 
Install HomeBrew  / https://brew.sh/ 
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"


Install python + packages:
brew install python
brew install ripgrep
brew install ctags

pip3 install neovim
pip3 install pyflakes
pip3 install flake8 

Install MacVim:
https://github.com/macvim-dev/macvim/releases (MacVim.dmg)

Clone this repository to  home directory:
cd ~
git clone https://github.com/tikeda411/dotfiles.git
./dotfiles/install.sh

mvim # enter space # install plugin dialog -> yes, wait until end plugin installation -> :quit

mvim

Enjoy!


--------------------------------------------------
Usual commands:
Normal mode
Ctl-P General menu command
Â» 
   LeaderF            Shortcut/Command
     lfFunction       <Space>f / <C-Space> / <C-R>
     lfProjects       <Space>p
     lfBuffers        <Space>b
     lfLeaderf        <Space>l
   Direct Command           
     Project Open     :PyOpenProject
     vimrc            :e ~/.vimrc
   Legacy              
     python def            
     Functions        <C-@>
     Projects         ct
     Buffers          fj/<C-l>
     Update plugins   unu
     messages         :messages
     keyboard map     mm
     bookmars         <F2>
     marks            um
     unite source     us
     jump             :Unite jump
     change           :Unite change
     
F3  for global search word (Cmd J/Cmd K for navigation) / F4 Close quick fix 
Shift Cursor Select and Enter for Align column
Cmd-1 for Comment/Uncomment
For other commands also see .vimrc

--------------------------------------------------
Project management
see mybundle/vim-project-files or https://github.com/akioito/vim-project-files 
open sample.vim-prj
:PyOpenProject


--------------------------------------------------
Visual trick:
Terminal
defaults write org.vim.MacVim MMTextInsetLeft  5
defaults write org.vim.MacVim MMTextInsetRight 2 



--------------------------------------------------
If you want to compile your MacVim
git clone https://github.com/macvim-dev/macvim.git (first time)
# git pull        
# make distclean
cd macvim
sudo xcode-select --switch /Applications/Xcode9.4.1.app # Mojave
CFLAGS=-O3 ./configure --enable-python3interp 
make

Symlink (Only for first time)
cd /Applications
ln -s $HOME/macvim/src/MacVim/build/Release/MacVim.app .   

--------------------------------------------------
For Javascript and Rust function navigation

~/.ctags
--exclude=gulp
--languages=-javascript
--langdef=js
--langmap=js:.js
--langmap=js:+.jsx
--regex-js=/[ \t.]([A-Z][A-Z0-9._$]+)[ \t]*[=:][ \t]*([0-9"'\[\{]|null)/\1/n,constant/
--regex-js=/\.([A-Za-z0-9._$]+)[ \t]*=[ \t]*\{/\1/o,object/
--regex-js=/['"]*([A-Za-z0-9_$]+)['"]*[ \t]*:[ \t]*\{/\1/o,object/
--regex-js=/([A-Za-z0-9._$]+)\[["']([A-Za-z0-9_$]+)["']\][ \t]*=[ \t]*\{/\1\.\2/o,object/
--regex-js=/([A-Za-z0-9._$]+)[ \t]*=[ \t]*\(function\(\)/\1/c,class/
--regex-js=/['"]*([A-Za-z0-9_$]+)['"]*:[ \t]*\(function\(\)/\1/c,class/
--regex-js=/class[ \t]+([A-Za-z0-9._$]+)[ \t]*/\1/c,class/
--regex-js=/([A-Za-z$][A-Za-z0-9_$()]+)[ \t]*=[ \t]*[Rr]eact.createClass[ \t]*\(/\1/c,class/
--regex-js=/([A-Z][A-Za-z0-9_$]+)[ \t]*=[ \t]*[A-Za-z0-9_$]*[ \t]*[{(]/\1/c,class/
--regex-js=/([A-Z][A-Za-z0-9_$]+)[ \t]*:[ \t]*[A-Za-z0-9_$]*[ \t]*[{(]/\1/c,class/
--regex-js=/([A-Za-z$][A-Za-z0-9_$]+)[ \t]*=[ \t]*function[ \t]*\(/\1/f,function/
--regex-js=/(function)*[ \t]*([A-Za-z$_][A-Za-z0-9_$]+)[ \t]*\([^)]*\)[ \t]*\{/\2/f,function/
--regex-js=/['"]*([A-Za-z$][A-Za-z0-9_$]+)['"]*:[ \t]*function[ \t]*\(/\1/m,method/
--regex-js=/([A-Za-z0-9_$]+)\[["']([A-Za-z0-9_$]+)["']\][ \t]*=[ \t]*function[ \t]*\(/\2/m,method/

--langdef=Rust
--langmap=Rust:.rs
--regex-Rust=/fn +([a-zA-Z0-9_]+) *[(<{]/\1/f,functions,function definitions/
--regex-Rust=/(type|enum|struct|trait)[ \t]+([a-zA-Z0-9_]+) *[<{(;]/\2/T,types,type definitions/
--regex-Rust=/mod[ \t]+([a-zA-Z0-9_]+) *[<{(;]/\1/M,modules,module definitions/
--regex-Rust=/(static|const) +([a-zA-Z0-9_]+) *[:=]/\2/c,consts,static constants/
--regex-Rust=/macro_rules! +([a-zA-Z0-9_]+) *[{]/\1/d,macros,macro definitions/
--regex-Rust=/impl([ \t\n]*<[^>]*>)?[ \t]+(([a-zA-Z0-9_:]+)[ \t]*(<[^>]*>)?[ \t]+(for)[ \t]+)?([a-zA-Z0-9_]+)/\6/i,impls,trait implementations/


